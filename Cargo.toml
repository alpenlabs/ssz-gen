[workspace]
members = [
    "crates/ssz_codegen",
    "crates/ssz",
    "crates/ssz_derive",
    "crates/tree_hash",
    "crates/tree_hash_derive",
    "crates/ssz_types",
    "crates/sizzle-parser",
    "crates/ssz_primitives",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2024"
authors = [
    "Trey Del Bonis <trey@alpenlabs.io>",
    "Ali Rezai <ali.baghbidi@nethermind.io>",
]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/alpenlabs/ssz-gen"
categories = ["cryptography::cryptocurrencies"]
keywords = ["crypto", "bitcoin"]

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rust.unreachable_pub = "warn"
rust.unused_crate_dependencies = "deny"
rust.unused_must_use = "deny"
rust.unexpected_cfgs = { level = "warn", check-cfg = [
    'cfg(coverage, coverage_nightly)',
] }
rust.missing_docs = "warn"
rustdoc.all = "warn"

[profile.release]
opt-level = "z"   # Optimized for size, use 3 for speed
lto = true        # Enable Link Time Optimization
codegen-units = 1 # Reduced to increase optimizations
panic = "abort"   # Abort on panic
strip = "symbols" # Strip symbols from binary

[workspace.dependencies]
sizzle-parser = { path = "crates/sizzle-parser" }
ssz = { path = "crates/ssz" }
ssz_derive = { path = "crates/ssz_derive" }
ssz_primitives = { path = "crates/ssz_primitives" }
ssz_types = { path = "crates/ssz_types" }
tree_hash = { path = "crates/tree_hash" }
tree_hash_derive = { path = "crates/tree_hash_derive" }

arbitrary = { version = "1.0", features = ["derive"] }
darling = "0.20.9"
ethereum_hashing = "0.7.0"
hex = "0.4"
itertools = "0.13.0"
proc-macro2 = "1.0.23"
quote = "1.0.18"
rand =  "0.8.5"
ruint = { version = "1.14.0", default-features = false, features = ["alloc"] }
serde = "1.0.0"
serde_derive = "1.0.0"
serde_json = "1.0.0"
smallvec = { version = "1.6.1", features = ["const_generics"] }
syn = "2.0.69"
prettyplease = "0.2.33"
